spring:
  application:
    name: general-component
  profiles:
    active: dev
  config:
    import:
      - classpath:/config/common.yml



---
spring:
  config:
    activate:
      on-profile: dev
server:
  port: 8081
  servlet:
    context-path: /general-component

#日志
logging:
  file:
    #日志文件名
    name: web
    #日志相对路径
    path: ./web/target/logs
  logback:
    rollingpolicy:
      # 单文件的大小，默认10M, 超过之后打包成一个日志文件
      max-file-size: 2MB
      # 日志保存的天数
      max-history: 30
  level:
    #日志级别
    root: info
# 日志脱敏
  desensitize:
    # 是否忽略大小写匹配，默认为true
    ignore: true
    # 是否开启脱敏，默认为false
    open: true
    # pattern下的key/value为固定脱敏规则
    patternReg:
      # 邮箱 - @前第4-7位脱敏
      emailReg: "@>(4,7)"
      # qq邮箱 - @后1-3位脱敏
      qqEmailReg: "@<(1,3)"
      # 姓名 - 姓脱敏，如*杰伦
      nameReg: 1,1
      # 密码 - 所有需要完全脱敏的都可以使用内置的password
      passwordReg: password
    patternRegs:
      # 身份证号，key后面的字段都可以匹配以下规则(用逗号分隔)
      - key: identity,idcard
        # 定义规则的标识
        customRegs:
          # defaultRegex表示使用组件内置的规则：identity表示身份证号 - 内置的18/15位
          - customRegex: identity
            position: 9,13
          # 内置的other表示如果其他规则都无法匹配到，则按该规则处理
          - customRegex: other
            position: 9,10
      # 电话号码，key后面的字段都可以匹配以下规则(用逗号分隔)
      - key: phone,cellphone,mobile
        customRegs:
          # 手机号 - 内置的11位手机匹配规则
          - customRegex: phone
            position: 4,7
          # 自定义正则匹配表达式：座机号(带区号，号码七位|八位)
          - customRegex: "^0[0-9]{2,3}-[0-9]{7,8}"
            # -后面的1-4位脱敏
            position: "-<(1,4)"
          # 自定义正则匹配表达式：座机号(不带区号)
          - customRegex: "^[0-9]{7,8}"
            position: 3,5
          # 内置的other表示如果其他规则都无法匹配到，则按该规则处理
          - customRegex: other
            position: 1,3
